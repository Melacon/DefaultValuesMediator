
#ifndef _H_u_MicrowaveModel_ObjectClasses_AirInterface
#define _H_u_MicrowaveModel_ObjectClasses_AirInterface
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module MicrowaveModel-ObjectClasses-AirInterface
    revision 2016-09-01
    namespace uri:onf:MicrowaveModel-ObjectClasses-AirInterface
    organization ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_MicrowaveModel-ObjectClasses-AirInterface.h"

#ifdef __cplusplus
extern "C" {
#endif

/* list /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_ {
    dlq_hdr_t qhdr;
    xmlChar *transmissionModeId;
    int32 channelBandwidth;
    int16 modulationScheme;
    int8 informationRate;
    int8 txPowerMin;
    int8 txPowerMax;
    int16 rxThreshold;
    int8 amUpshiftLevel;
    int8 amDownshiftLevel;
    boolean xpicIsAvail;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList;

/* list /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_ {
    dlq_hdr_t qhdr;
    xmlChar *supportedChannelPlan;
    boolean duplexDistanceIsVariable;
    int32 duplexDistance;
    boolean autoFreqSelectIsAvail;
    dlq_hdr_t transmissionModeList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList;

/* container /MW_AirInterface_Pac/airInterfaceCapability */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability_ {
    xmlChar *typeOfEquipment;
    int32 txFrequencyMin;
    int32 txFrequencyMax;
    int32 rxFrequencyMin;
    int32 rxFrequencyMax;
    boolean adaptiveModulationIsAvail;
    boolean mimoIsAvail;
    int8 mimoChannels;
    boolean alicIsAvail;
    boolean atpcIsAvail;
    int8 atpcRange;
    boolean encryptionIsAvail;
    boolean loopBackIsAvail;
    xmlChar *maintenanceTimerRange;
    xmlChar *supportedAlarms;
    dlq_hdr_t supportedChannelPlanList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability;

/* list /MW_AirInterface_Pac/airInterfaceConfiguration/problemKindSeverityList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_ {
    dlq_hdr_t qhdr;
    xmlChar *problemKindName;
    xmlChar *problemKindSeverity;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList;

/* container /MW_AirInterface_Pac/airInterfaceConfiguration */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceConfiguration_ {
    xmlChar *airInterfaceName;
    xmlChar *radioSignalID;
    int32 txFrequency;
    int32 rxFrequency;
    int32 txChannelBandwidth;
    int32 rxChannelBandwidth;
    xmlChar *polarization;
    boolean powerIsOn;
    boolean transmitterIsOn;
    boolean receiverIsOn;
    int8 txPower;
    boolean adaptiveModulationIsOn;
    int16 modulationMin;
    int16 modulationMax;
    boolean xpicIsOn;
    boolean mimoIsOn;
    boolean alicIsOn;
    boolean atpcIsOn;
    int16 atpcThreshUpper;
    int16 atpcThreshLower;
    boolean autoFreqSelectIsOn;
    int8 autoFreqSelectRange;
    boolean modulationIsOn;
    boolean encryptionIsOn;
    xmlChar *cryptographicKey;
    boolean loopBackIsOn;
    int32 maintenanceTimer;
    dlq_hdr_t problemKindSeverityList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceConfiguration;

/* container /MW_AirInterface_Pac/airInterfaceStatus */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceStatus_ {
    int32 txFrequencyCur;
    int32 rxFrequencyCur;
    int8 txLevelCur;
    int8 rxLevelCur;
    int16 modulationCur;
    int8 informationRateCur;
    int8 snirCur;
    int8 xpdCur;
    int8 rfTempCur;
    xmlChar *lastStatusChange;
    boolean radioPowerIsUp;
    boolean linkIsUp;
    boolean xpicIsUp;
    boolean mimoIsUp;
    boolean alicIsUp;
    boolean atpcIsUp;
    boolean autoFreqSelectIsUp;
    boolean loopBackIsUp;
    xmlChar *localEndPointId;
    xmlChar *remoteEndPointId;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceStatus;

/* list /MW_AirInterface_Pac/airInterfaceCurrentProblems/currentProblemList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_ {
    dlq_hdr_t qhdr;
    int32 sequenceNumber;
    xmlChar *timeStamp;
    xmlChar *problemName;
    xmlChar *problemSeverity;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList;

/* container /MW_AirInterface_Pac/airInterfaceCurrentProblems */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentProblems_ {
    dlq_hdr_t currentProblemList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentProblems;

/* container /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_ {
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 txLevelMin;
    int8 txLevelMax;
    int8 txLevelAvg;
    int8 rxLevelMin;
    int8 rxLevelMax;
    int8 rxLevelAvg;
    int32 time2Symbols;
    int32 time4SymbolsS;
    int32 time4Symbols;
    int32 time8Symbols;
    int32 time16SymbolsS;
    int32 time16Symbols;
    int32 time32Symbols;
    int32 time64Symbols;
    int32 time128Symbols;
    int32 time256Symbols;
    int32 time512Symbols;
    int32 time512SymbolsL;
    int32 time1024Symbols;
    int32 time1024SymbolsL;
    int32 time2048Symbols;
    int32 time2048SymbolsL;
    int32 time4096Symbols;
    int32 time4096SymbolsL;
    int32 time8192Symbols;
    int32 time8192SymbolsL;
    int8 snirMin;
    int8 snirMax;
    int8 snirAvg;
    int8 xpdMin;
    int8 xpdMax;
    int8 xpdAvg;
    int8 rfTempMin;
    int8 rfTempMax;
    int8 rfTempAvg;
    int16 defectBlocksSum;
    int32 timePeriod;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData;

/* list /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_ {
    dlq_hdr_t qhdr;
    xmlChar *objectClass;
    xmlChar *nameBinding;
    xmlChar *scannerId;
    xmlChar *granularityPeriod;
    xmlChar *administrativeState;
    boolean suspectIntervalFlag;
    int32 elapsedTime;
    xmlChar *timestamp;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData performanceData;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList;

/* container /MW_AirInterface_Pac/airInterfaceCurrentPerformance */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance_ {
    dlq_hdr_t currentPerformanceDataList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance;

/* container /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_ {
    int32 es;
    int32 ses;
    int32 cses;
    int32 unavailability;
    int8 txLevelMin;
    int8 txLevelMax;
    int8 txLevelAvg;
    int8 rxLevelMin;
    int8 rxLevelMax;
    int8 rxLevelAvg;
    int32 time2Symbols;
    int32 time4SymbolsS;
    int32 time4Symbols;
    int32 time8Symbols;
    int32 time16SymbolsS;
    int32 time16Symbols;
    int32 time32Symbols;
    int32 time64Symbols;
    int32 time128Symbols;
    int32 time256Symbols;
    int32 time512Symbols;
    int32 time512SymbolsL;
    int32 time1024Symbols;
    int32 time1024SymbolsL;
    int32 time2048Symbols;
    int32 time2048SymbolsL;
    int32 time4096Symbols;
    int32 time4096SymbolsL;
    int32 time8192Symbols;
    int32 time8192SymbolsL;
    int8 snirMin;
    int8 snirMax;
    int8 snirAvg;
    int8 xpdMin;
    int8 xpdMax;
    int8 xpdAvg;
    int8 rfTempMin;
    int8 rfTempMax;
    int8 rfTempAvg;
    int16 defectBlocksSum;
    int32 timePeriod;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData;

/* list /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_ {
    dlq_hdr_t qhdr;
    xmlChar *objectClass;
    xmlChar *nameBinding;
    xmlChar *historyDataId;
    xmlChar *periodEndTime;
    xmlChar *granularityPeriod;
    boolean suspectIntervalFlag;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData performanceData;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList;

/* container /MW_AirInterface_Pac/airInterfaceHistoricalPerformances */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_ {
    dlq_hdr_t historicalPerformanceDataList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances;

/* list /MW_AirInterface_Pac */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layerProtocol;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCapability airInterfaceCapability;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceConfiguration airInterfaceConfiguration;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceStatus airInterfaceStatus;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentProblems airInterfaceCurrentProblems;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceCurrentPerformance airInterfaceCurrentPerformance;
    y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac_airInterfaceHistoricalPerformances airInterfaceHistoricalPerformances;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_MW_AirInterface_Pac;

/* leaf-list /CoChannelGroup/airInterfaceList */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_CoChannelGroup_airInterfaceList_ {
    dlq_hdr_t qhdr;
    xmlChar *airInterfaceList;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_CoChannelGroup_airInterfaceList;

/* list /CoChannelGroup */
typedef struct y_MicrowaveModel_ObjectClasses_AirInterface_T_CoChannelGroup_ {
    dlq_hdr_t qhdr;
    xmlChar *coChannelGroupId;
    dlq_hdr_t airInterfaceList;
    xmlChar *sortOfCoChannelGroup;
} y_MicrowaveModel_ObjectClasses_AirInterface_T_CoChannelGroup;

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_layerProtocol_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/layerProtocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_layerProtocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_typeOfEquipment_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/typeOfEquipment
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_typeOfEquipment_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_txFrequencyMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/txFrequencyMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_txFrequencyMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_txFrequencyMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/txFrequencyMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_txFrequencyMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_rxFrequencyMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/rxFrequencyMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_rxFrequencyMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_rxFrequencyMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/rxFrequencyMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_rxFrequencyMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_adaptiveModulationIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/adaptiveModulationIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_adaptiveModulationIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_mimoIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/mimoIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_mimoIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_mimoChannels_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/mimoChannels
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_mimoChannels_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_alicIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/alicIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_alicIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_atpcIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/atpcIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_atpcIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_atpcRange_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/atpcRange
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_atpcRange_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_encryptionIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/encryptionIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_encryptionIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_loopBackIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/loopBackIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_loopBackIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_maintenanceTimerRange_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/maintenanceTimerRange
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_maintenanceTimerRange_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedAlarms_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedAlarms
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedAlarms_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan_get_keys
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/supportedChannelPlan
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan_get_keys (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_duplexDistanceIsVariable_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/duplexDistanceIsVariable
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_duplexDistanceIsVariable_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_duplexDistance_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/duplexDistance
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_duplexDistance_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_autoFreqSelectIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/autoFreqSelectIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_autoFreqSelectIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId_get_keys
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/transmissionModeId
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId_get_keys (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_channelBandwidth_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/channelBandwidth
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_channelBandwidth_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_modulationScheme_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/modulationScheme
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_modulationScheme_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_informationRate_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/informationRate
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_informationRate_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_txPowerMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/txPowerMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_txPowerMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_txPowerMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/txPowerMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_txPowerMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_rxThreshold_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/rxThreshold
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_rxThreshold_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_amUpshiftLevel_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/amUpshiftLevel
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_amUpshiftLevel_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_amDownshiftLevel_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/amDownshiftLevel
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_amDownshiftLevel_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_xpicIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapability/supportedChannelPlanList/transmissionModeList/xpicIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_xpicIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_supportedChannelPlan,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapability_supportedChannelPlanList_transmissionModeList_transmissionModeId);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_airInterfaceName_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/airInterfaceName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_airInterfaceName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_radioSignalID_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/radioSignalID
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_radioSignalID_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_txFrequency_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/txFrequency
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_txFrequency_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_rxFrequency_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/rxFrequency
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_rxFrequency_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_txChannelBandwidth_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/txChannelBandwidth
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_txChannelBandwidth_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_rxChannelBandwidth_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/rxChannelBandwidth
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_rxChannelBandwidth_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_polarization_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/polarization
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_polarization_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_powerIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/powerIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_powerIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_transmitterIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/transmitterIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_transmitterIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_receiverIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/receiverIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_receiverIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_txPower_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/txPower
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_txPower_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_adaptiveModulationIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/adaptiveModulationIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_adaptiveModulationIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMin_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/modulationMin
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMin_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMax_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/modulationMax
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMax_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_xpicIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/xpicIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_xpicIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_mimoIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/mimoIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_mimoIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_alicIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/alicIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_alicIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_atpcIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/atpcIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_atpcIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_atpcThreshUpper_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/atpcThreshUpper
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_atpcThreshUpper_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_atpcThreshLower_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/atpcThreshLower
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_atpcThreshLower_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_autoFreqSelectIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/autoFreqSelectIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_autoFreqSelectIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_autoFreqSelectRange_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/autoFreqSelectRange
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_autoFreqSelectRange_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_modulationIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/modulationIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_modulationIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_encryptionIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/encryptionIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_encryptionIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_cryptographicKey_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/cryptographicKey
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_cryptographicKey_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_loopBackIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/loopBackIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_loopBackIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_maintenanceTimer_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/maintenanceTimer
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_maintenanceTimer_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindName_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/problemKindSeverityList/problemKindName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindName);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindSeverity_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/problemKindSeverityList/problemKindSeverity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindSeverity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindName);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/problemKindSeverityList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceConfiguration_problemKindSeverityList_problemKindName);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceConfiguration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_txFrequencyCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/txFrequencyCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_txFrequencyCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_rxFrequencyCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/rxFrequencyCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_rxFrequencyCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_txLevelCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/txLevelCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_txLevelCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_rxLevelCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/rxLevelCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_rxLevelCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_modulationCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/modulationCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_modulationCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_informationRateCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/informationRateCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_informationRateCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_snirCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/snirCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_snirCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_xpdCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/xpdCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_xpdCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_rfTempCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/rfTempCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_rfTempCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_lastStatusChange_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/lastStatusChange
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_lastStatusChange_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_radioPowerIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/radioPowerIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_radioPowerIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_linkIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/linkIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_linkIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_xpicIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/xpicIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_xpicIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_mimoIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/mimoIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_mimoIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_alicIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/alicIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_alicIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_atpcIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/atpcIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_atpcIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_autoFreqSelectIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/autoFreqSelectIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_autoFreqSelectIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_loopBackIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/loopBackIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_loopBackIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_localEndPointId_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/localEndPointId
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_localEndPointId_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_remoteEndPointId_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/remoteEndPointId
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceStatus_remoteEndPointId_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_sequenceNumber_get_keys
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentProblems/currentProblemList/sequenceNumber
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_sequenceNumber_get_keys (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_timeStamp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentProblems/currentProblemList/timeStamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_timeStamp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    int32 k_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_sequenceNumber);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_problemName_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentProblems/currentProblemList/problemName
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_problemName_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    int32 k_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_sequenceNumber);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_problemSeverity_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentProblems/currentProblemList/problemSeverity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_problemSeverity_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    int32 k_MW_AirInterface_Pac_airInterfaceCurrentProblems_currentProblemList_sequenceNumber);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_objectClass_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/objectClass
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_objectClass_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_nameBinding_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/nameBinding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_nameBinding_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId_get_keys
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/scannerId
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId_get_keys (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_granularityPeriod_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/granularityPeriod
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_granularityPeriod_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_administrativeState_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_suspectIntervalFlag_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/suspectIntervalFlag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_suspectIntervalFlag_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_elapsedTime_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/elapsedTime
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_elapsedTime_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_timestamp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/timestamp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_timestamp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_es_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_es_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_ses_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_ses_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_cses_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_cses_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_unavailability_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_txLevelMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/txLevelMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_txLevelMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_txLevelMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/txLevelMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_txLevelMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_txLevelAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/txLevelAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_txLevelAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rxLevelMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/rxLevelMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rxLevelMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rxLevelMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/rxLevelMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rxLevelMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rxLevelAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/rxLevelAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rxLevelAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time2Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time2Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time2Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4SymbolsS_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time4SymbolsS
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4SymbolsS_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time4Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time8Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time8Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time8Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time16SymbolsS_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time16SymbolsS
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time16SymbolsS_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time16Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time16Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time16Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time32Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time32Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time32Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time64Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time64Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time64Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time128Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time128Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time128Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time256Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time256Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time256Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time512Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time512Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time512Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time512SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time512SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time512SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time1024Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time1024Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time1024Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time1024SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time1024SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time1024SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time2048Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time2048Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time2048Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time2048SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time2048SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time2048SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4096Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time4096Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4096Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4096SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time4096SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time4096SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time8192Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time8192Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time8192Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time8192SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/time8192SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_time8192SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_snirMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/snirMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_snirMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_snirMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/snirMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_snirMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_snirAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/snirAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_snirAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_xpdMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/xpdMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_xpdMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_xpdMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/xpdMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_xpdMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_xpdAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/xpdAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_xpdAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rfTempMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/rfTempMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rfTempMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rfTempMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/rfTempMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rfTempMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rfTempAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/rfTempAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_rfTempAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_defectBlocksSum_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/defectBlocksSum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_defectBlocksSum_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_timePeriod_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentPerformance/currentPerformanceDataList/performanceData/timePeriod
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_performanceData_timePeriod_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCurrentPerformance_currentPerformanceDataList_scannerId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_objectClass_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/objectClass
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_objectClass_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_nameBinding_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/nameBinding
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_nameBinding_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId_get_keys
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/historyDataId
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId_get_keys (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    xmlChar **list_key_entries,
    int *num_of_keys);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_periodEndTime_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/periodEndTime
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_periodEndTime_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_granularityPeriod_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/granularityPeriod
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_granularityPeriod_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_suspectIntervalFlag_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/suspectIntervalFlag
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_suspectIntervalFlag_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_es_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/es
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_es_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_ses_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/ses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_ses_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_cses_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/cses
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_cses_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_unavailability_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/unavailability
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_unavailability_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_txLevelMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/txLevelMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_txLevelMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_txLevelMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/txLevelMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_txLevelMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_txLevelAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/txLevelAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_txLevelAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rxLevelMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/rxLevelMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rxLevelMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rxLevelMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/rxLevelMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rxLevelMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rxLevelAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/rxLevelAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rxLevelAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time2Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time2Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time2Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4SymbolsS_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time4SymbolsS
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4SymbolsS_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time4Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time8Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time8Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time8Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time16SymbolsS_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time16SymbolsS
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time16SymbolsS_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time16Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time16Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time16Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time32Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time32Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time32Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time64Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time64Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time64Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time128Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time128Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time128Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time256Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time256Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time256Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time512Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time512Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time512Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time512SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time512SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time512SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time1024Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time1024Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time1024Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time1024SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time1024SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time1024SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time2048Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time2048Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time2048Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time2048SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time2048SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time2048SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4096Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time4096Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4096Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4096SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time4096SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time4096SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time8192Symbols_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time8192Symbols
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time8192Symbols_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time8192SymbolsL_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/time8192SymbolsL
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_time8192SymbolsL_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_snirMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/snirMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_snirMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_snirMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/snirMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_snirMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_snirAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/snirAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_snirAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_xpdMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/xpdMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_xpdMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_xpdMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/xpdMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_xpdMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_xpdAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/xpdAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_xpdAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rfTempMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/rfTempMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rfTempMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rfTempMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/rfTempMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rfTempMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rfTempAvg_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/rfTempAvg
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_rfTempAvg_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_defectBlocksSum_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/defectBlocksSum
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_defectBlocksSum_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_timePeriod_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceHistoricalPerformances/historicalPerformanceDataList/performanceData/timePeriod
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_performanceData_timePeriod_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceHistoricalPerformances_historicalPerformanceDataList_historyDataId);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_MW_AirInterface_Pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_coChannelGroupId_edit
* 
* Edit database object callback
* Path: /CoChannelGroup/coChannelGroupId
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_coChannelGroupId_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_CoChannelGroup_coChannelGroupId);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_airInterfaceList_edit
* 
* Edit database object callback
* Path: /CoChannelGroup/airInterfaceList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_airInterfaceList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_CoChannelGroup_coChannelGroupId);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_sortOfCoChannelGroup_edit
* 
* Edit database object callback
* Path: /CoChannelGroup/sortOfCoChannelGroup
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_sortOfCoChannelGroup_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_CoChannelGroup_coChannelGroupId);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_edit
* 
* Edit database object callback
* Path: /CoChannelGroup
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_CoChannelGroup_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_CoChannelGroup_coChannelGroupId);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_init
* 
* initialize the MicrowaveModel-ObjectClasses-AirInterface server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_AirInterface_init2 (void);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_AirInterface_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_MicrowaveModel_ObjectClasses_AirInterface_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif