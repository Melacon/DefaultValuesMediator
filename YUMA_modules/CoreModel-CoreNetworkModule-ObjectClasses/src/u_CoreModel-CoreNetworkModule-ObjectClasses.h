
#ifndef _H_u_CoreModel_CoreNetworkModule_ObjectClasses
#define _H_u_CoreModel_CoreNetworkModule_ObjectClasses
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module CoreModel-CoreNetworkModule-ObjectClasses
    revision 2016-08-11
    namespace uri:onf:CoreModel-CoreNetworkModule-ObjectClasses
    organization ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_CoreModel-CoreNetworkModule-ObjectClasses.h"

#ifdef __cplusplus
extern "C" {
#endif

/* list /ForwardingConstruct/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_nameList;

/* list /ForwardingConstruct/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_labelList;

/* list /ForwardingConstruct/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_extensionList;

/* list /ForwardingConstruct/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_localIdList;

/* leaf-list /ForwardingConstruct/_lowerLevelFcRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__lowerLevelFcRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_lowerLevelFcRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__lowerLevelFcRefList;

/* list /ForwardingConstruct/_fcPortList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_nameList;

/* list /ForwardingConstruct/_fcPortList/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_labelList;

/* list /ForwardingConstruct/_fcPortList/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_extensionList;

/* list /ForwardingConstruct/_fcPortList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_localIdList;

/* leaf-list /ForwardingConstruct/_fcPortList/_ltpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList__ltpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList__ltpRefList;

/* list /ForwardingConstruct/_fcPortList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    dlq_hdr_t _ltpRefList;
    xmlChar *role;
    xmlChar *fcPortDirection;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcPortList;

/* list /ForwardingConstruct/_fcSwitchList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_nameList;

/* list /ForwardingConstruct/_fcSwitchList/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_labelList;

/* list /ForwardingConstruct/_fcSwitchList/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_extensionList;

/* list /ForwardingConstruct/_fcSwitchList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_localIdList;

/* leaf-list /ForwardingConstruct/_fcSwitchList/_selectedFcPortRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList__selectedFcPortRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_selectedFcPortRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList__selectedFcPortRefList;

/* list /ForwardingConstruct/_fcSwitchList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    int32 holdOffTime;
    int32 waitToRestoreTime;
    xmlChar *protType;
    xmlChar *operType;
    dlq_hdr_t _selectedFcPortRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct__fcSwitchList;

/* list /ForwardingConstruct */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    xmlChar *layerProtocolName;
    dlq_hdr_t _lowerLevelFcRefList;
    dlq_hdr_t _fcPortList;
    dlq_hdr_t _fcSwitchList;
    xmlChar *forwardingDirection;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_ForwardingConstruct;

/* list /NetworkElement/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_nameList;

/* list /NetworkElement/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_labelList;

/* list /NetworkElement/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_extensionList;

/* list /NetworkElement/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_localIdList;

/* list /NetworkElement/_fdRefList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_nameList;

/* list /NetworkElement/_fdRefList/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_labelList;

/* list /NetworkElement/_fdRefList/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_extensionList;

/* list /NetworkElement/_fdRefList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_localIdList;

/* leaf-list /NetworkElement/_fdRefList/layerProtocolNameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_layerProtocolNameList_ {
    dlq_hdr_t qhdr;
    xmlChar *layerProtocolNameList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_layerProtocolNameList;

/* leaf-list /NetworkElement/_fdRefList/_lowerLevelFdRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList__lowerLevelFdRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_lowerLevelFdRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList__lowerLevelFdRefList;

/* leaf-list /NetworkElement/_fdRefList/_fcRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList__fcRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_fcRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList__fcRefList;

/* leaf-list /NetworkElement/_fdRefList/_ltpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList__ltpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList__ltpRefList;

/* list /NetworkElement/_fdRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    dlq_hdr_t layerProtocolNameList;
    dlq_hdr_t _lowerLevelFdRefList;
    dlq_hdr_t _fcRefList;
    dlq_hdr_t _ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__fdRefList;

/* list /NetworkElement/_ltpRefList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_nameList;

/* list /NetworkElement/_ltpRefList/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_labelList;

/* list /NetworkElement/_ltpRefList/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_extensionList;

/* list /NetworkElement/_ltpRefList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_localIdList;

/* leaf-list /NetworkElement/_ltpRefList/_serverLtpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__serverLtpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_serverLtpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__serverLtpRefList;

/* leaf-list /NetworkElement/_ltpRefList/_clientLtpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__clientLtpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_clientLtpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__clientLtpRefList;

/* list /NetworkElement/_ltpRefList/_lpList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_nameList;

/* list /NetworkElement/_ltpRefList/_lpList/labelList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_labelList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_labelList;

/* list /NetworkElement/_ltpRefList/_lpList/extensionList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_extensionList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_extensionList;

/* list /NetworkElement/_ltpRefList/_lpList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_localIdList;

/* list /NetworkElement/_ltpRefList/_lpList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    xmlChar *layerProtocolName;
    xmlChar *configuredClientCapacity;
    xmlChar *lpDirection;
    boolean terminationState;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList;

/* leaf-list /NetworkElement/_ltpRefList/physicalPortReference */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_physicalPortReference_ {
    dlq_hdr_t qhdr;
    xmlChar *physicalPortReference;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_physicalPortReference;

/* leaf-list /NetworkElement/_ltpRefList/_ltpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__ltpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__ltpRefList;

/* list /NetworkElement/_ltpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    dlq_hdr_t _serverLtpRefList;
    dlq_hdr_t _clientLtpRefList;
    dlq_hdr_t _lpList;
    xmlChar *_connectedLtpRef;
    xmlChar *_peerLtpRef;
    dlq_hdr_t physicalPortReference;
    dlq_hdr_t _ltpRefList;
    xmlChar *ltpDirection;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList;

/* container /NetworkElement */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_ {
    dlq_hdr_t nameList;
    dlq_hdr_t labelList;
    dlq_hdr_t extensionList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *administrativeState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    dlq_hdr_t _fdRefList;
    dlq_hdr_t _ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement;

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_nameList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_nameList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_nameList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_labelList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_labelList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_labelList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_extensionList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_extensionList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_operationalState_get
* 
* Get database object callback
* Path: /ForwardingConstruct/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_administrativeControl_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_administrativeState_get
* 
* Get database object callback
* Path: /ForwardingConstruct/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_lifecycleState_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_localIdList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_localIdList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_uuid_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_layerProtocolName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/layerProtocolName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_layerProtocolName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__lowerLevelFcRefList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_lowerLevelFcRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__lowerLevelFcRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_nameList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_nameList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_labelList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_labelList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_labelList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_extensionList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_extensionList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_operationalState_get
* 
* Get database object callback
* Path: /ForwardingConstruct/_fcPortList/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_administrativeControl_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_administrativeState_get
* 
* Get database object callback
* Path: /ForwardingConstruct/_fcPortList/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_lifecycleState_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_localIdList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_localIdList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_uuid_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList__ltpRefList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/_ltpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList__ltpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_role_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/role
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_role_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_fcPortDirection_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList/fcPortDirection
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_fcPortDirection_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcPortList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcPortList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcPortList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_nameList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_nameList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_labelList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_labelList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_labelList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_extensionList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_extensionList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_operationalState_get
* 
* Get database object callback
* Path: /ForwardingConstruct/_fcSwitchList/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_administrativeControl_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_administrativeState_get
* 
* Get database object callback
* Path: /ForwardingConstruct/_fcSwitchList/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_lifecycleState_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_localIdList_value_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_localIdList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_uuid_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_holdOffTime_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/holdOffTime
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_holdOffTime_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_waitToRestoreTime_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/waitToRestoreTime
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_waitToRestoreTime_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_protType_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/protType
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_protType_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_operType_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/operType
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_operType_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList__selectedFcPortRefList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList/_selectedFcPortRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList__selectedFcPortRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/_fcSwitchList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct__fcSwitchList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid,
    const xmlChar *k_ForwardingConstruct__fcSwitchList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_forwardingDirection_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct/forwardingDirection
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_forwardingDirection_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_edit
* 
* Edit database object callback
* Path: /ForwardingConstruct
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_ForwardingConstruct_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_ForwardingConstruct_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_labelList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_labelList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_labelList_edit
* 
* Edit database object callback
* Path: /NetworkElement/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_extensionList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_extensionList_edit
* 
* Edit database object callback
* Path: /NetworkElement/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_operationalState_get
* 
* Get database object callback
* Path: /NetworkElement/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_operationalState_get (
    val_value_t *dstval);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_administrativeControl_edit
* 
* Edit database object callback
* Path: /NetworkElement/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_administrativeState_get
* 
* Get database object callback
* Path: /NetworkElement/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_administrativeState_get (
    val_value_t *dstval);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_lifecycleState_edit
* 
* Edit database object callback
* Path: /NetworkElement/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_labelList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_labelList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_labelList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_extensionList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_extensionList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_operationalState_get
* 
* Get database object callback
* Path: /NetworkElement/_fdRefList/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_administrativeControl_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_administrativeState_get
* 
* Get database object callback
* Path: /NetworkElement/_fdRefList/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_lifecycleState_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid,
    const xmlChar *k_NetworkElement__fdRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_layerProtocolNameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/layerProtocolNameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_layerProtocolNameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList__lowerLevelFdRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/_lowerLevelFdRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList__lowerLevelFdRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList__fcRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/_fcRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList__fcRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList__ltpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList/_ltpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList__ltpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_fdRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__fdRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__fdRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_labelList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_labelList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_labelList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_extensionList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_extensionList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_operationalState_get
* 
* Get database object callback
* Path: /NetworkElement/_ltpRefList/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_administrativeControl_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_administrativeState_get
* 
* Get database object callback
* Path: /NetworkElement/_ltpRefList/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_lifecycleState_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__serverLtpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_serverLtpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__serverLtpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__clientLtpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_clientLtpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__clientLtpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_labelList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/labelList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_labelList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_labelList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/labelList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_labelList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_labelList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/labelList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_labelList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_labelList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_extensionList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/extensionList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_extensionList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_extensionList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/extensionList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_extensionList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_extensionList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_extensionList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/extensionList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_extensionList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_extensionList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_operationalState_get
* 
* Get database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_administrativeControl_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_administrativeState_get
* 
* Get database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/administrativeState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_administrativeState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_lifecycleState_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_layerProtocolName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/layerProtocolName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_layerProtocolName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_configuredClientCapacity_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/configuredClientCapacity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_configuredClientCapacity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_lpDirection_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/lpDirection
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_lpDirection_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_terminationState_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/terminationState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_terminationState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__connectedLtpRef_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_connectedLtpRef
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__connectedLtpRef_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__peerLtpRef_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_peerLtpRef
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__peerLtpRef_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_physicalPortReference_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/physicalPortReference
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_physicalPortReference_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__ltpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_ltpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__ltpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_ltpDirection_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/ltpDirection
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_ltpDirection_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_edit
* 
* Edit database object callback
* Path: /NetworkElement
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_init
* 
* initialize the CoreModel-CoreNetworkModule-ObjectClasses server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_init2 (void);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_CoreModel_CoreNetworkModule_ObjectClasses_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif